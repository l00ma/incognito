# Generated by Django 3.2.7 on 2021-09-11 16:03

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='connexion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wan_ip', models.CharField(max_length=15, verbose_name='ip WAN')),
                ('conn_type', models.CharField(max_length=3, verbose_name='type connexion')),
                ('country_name', models.CharField(max_length=128, verbose_name='pays')),
                ('country_code', models.CharField(max_length=2, verbose_name='code pays')),
                ('add_route', models.CharField(blank=True, max_length=255, verbose_name='regle route')),
                ('add_table', models.CharField(blank=True, max_length=255, verbose_name='regle IPtables')),
                ('last_vpn_conf', models.CharField(blank=True, max_length=128, verbose_name='config VPN')),
                ('cur_wan_ip', models.CharField(blank=True, max_length=15, verbose_name='current ip WAN')),
                ('cur_country_name', models.CharField(blank=True, max_length=64, verbose_name='current pays')),
                ('cur_country_code', models.CharField(blank=True, max_length=2, verbose_name='current code pays')),
                ('cur_city_name', models.CharField(blank=True, max_length=64, verbose_name='current ville')),
            ],
        ),
        migrations.CreateModel(
            name='mac_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.CharField(blank=True, max_length=32, verbose_name='client')),
                ('ip', models.CharField(blank=True, max_length=3, verbose_name='suffixe ip')),
                ('mac', models.CharField(blank=True, max_length=17, verbose_name='adresse MAC')),
            ],
        ),
        migrations.CreateModel(
            name='monitoring_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eth_ip', models.CharField(blank=True, max_length=15, verbose_name='eth0 ip')),
                ('eth_mac', models.CharField(blank=True, max_length=17, verbose_name='eth0 mac')),
                ('wlan_mac', models.CharField(blank=True, max_length=17, verbose_name='wlan0 mac')),
                ('received_datas', models.CharField(blank=True, max_length=8, verbose_name='received_datas')),
                ('sent_datas', models.CharField(blank=True, max_length=8, verbose_name='sent_datas')),
                ('int_temp', models.CharField(blank=True, max_length=5, verbose_name='internal temp')),
                ('uptime', models.CharField(blank=True, max_length=128, verbose_name='uptime')),
                ('load_1min', models.CharField(blank=True, max_length=5, verbose_name='1min load')),
                ('load_5min', models.CharField(blank=True, max_length=5, verbose_name='5min load')),
                ('load_15min', models.CharField(blank=True, max_length=5, verbose_name='15min load')),
                ('space_total', models.CharField(blank=True, max_length=8, verbose_name='total space')),
                ('space_free', models.CharField(blank=True, max_length=8, verbose_name='free space')),
                ('space_percent', models.CharField(blank=True, max_length=5, verbose_name='percent free space')),
                ('connected_hosts', models.CharField(blank=True, max_length=255, verbose_name='connected hosts')),
                ('openvpn_v', models.CharField(blank=True, max_length=64, verbose_name='OpenVPN version')),
                ('tor_v', models.CharField(blank=True, max_length=64, verbose_name='Tor version')),
            ],
        ),
        migrations.CreateModel(
            name='setting_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ap_name', models.CharField(max_length=32, verbose_name='SSID')),
                ('ap_wpa', models.CharField(max_length=32, verbose_name='SSID password')),
                ('ap_ip', models.CharField(max_length=7, verbose_name='SSID ip')),
                ('start_dhcp', models.CharField(max_length=3, verbose_name='DHCP start ip')),
                ('end_dhcp', models.CharField(max_length=3, verbose_name='DHCP end ip')),
                ('reboot', models.CharField(max_length=1, verbose_name='reboot')),
                ('reset', models.CharField(max_length=1, verbose_name='reset')),
                ('stop', models.CharField(max_length=1, verbose_name='stop')),
                ('log', models.CharField(max_length=1, verbose_name='logfile')),
                ('error', models.CharField(max_length=3, verbose_name='error code')),
                ('error_text', models.CharField(max_length=255, verbose_name='error text')),
                ('dns1', models.CharField(max_length=15, verbose_name='dns N°1')),
                ('dns2', models.CharField(max_length=15, verbose_name='dns N°2')),
                ('dns3', models.CharField(blank=True, max_length=15, verbose_name='dns N°3')),
                ('adblock', models.CharField(max_length=1, verbose_name='adblock')),
            ],
        ),
        migrations.CreateModel(
            name='vpn_settings_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vpn_dns1', models.CharField(blank=True, max_length=15, verbose_name='dns for VPN N°1')),
                ('vpn_dns2', models.CharField(blank=True, max_length=15, verbose_name='dns for VPN N°2')),
            ],
        ),
    ]
